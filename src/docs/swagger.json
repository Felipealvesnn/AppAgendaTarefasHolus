{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"RoleDto": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UserResponseDto": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"lastLogin": {
						"type": "string",
						"format": "date-time"
					},
					"profileImageUrl": {
						"type": "string"
					},
					"roles": {
						"items": {
							"$ref": "#/components/schemas/RoleDto"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"email",
					"isActive",
					"createdAt",
					"updatedAt",
					"roles"
				],
				"type": "object",
				"additionalProperties": true
			},
			"PaginatedUsersResponse": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/UserResponseDto"
						},
						"type": "array"
					},
					"meta": {
						"properties": {
							"itemsPerPage": {
								"type": "number",
								"format": "double"
							},
							"totalItems": {
								"type": "number",
								"format": "double"
							},
							"totalPages": {
								"type": "number",
								"format": "double"
							},
							"currentPage": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"itemsPerPage",
							"totalItems",
							"totalPages",
							"currentPage"
						],
						"type": "object"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": true
			},
			"NotFoundError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"message",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": true
			},
			"CreateUserDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"roleIds": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"profileImageUrl": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UpdateUserDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"roleIds": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"profileImageUrl": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"AuthResponseDto": {
				"properties": {
					"token": {
						"type": "string"
					},
					"user": {
						"properties": {
							"roles": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"email": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"id": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"roles",
							"email",
							"name",
							"id"
						],
						"type": "object"
					}
				},
				"required": [
					"token",
					"user"
				],
				"type": "object",
				"additionalProperties": true
			},
			"BadRequestError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"message",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UnauthorizedError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"message",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": true
			},
			"LoginDto": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "access_token",
				"in": "query"
			},
			"tsoa_auth": {
				"type": "oauth2",
				"flows": {
					"implicit": {
						"authorizationUrl": "http://swagger.io/api/oauth/dialog",
						"scopes": {
							"write:pets": "modify things",
							"read:pets": "read things"
						}
					}
				}
			}
		}
	},
	"info": {
		"title": "minha-api",
		"version": "1.0.0",
		"description": "API Node.js + TypeScript",
		"contact": {}
	},
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedUsersResponse"
								}
							}
						}
					}
				},
				"description": "Retorna uma lista paginada de usuários",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						}
					},
					{
						"in": "query",
						"name": "active",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "Usuário criado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					}
				},
				"description": "Cria um novo usuário",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDto"
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotFoundError"
								}
							}
						}
					}
				},
				"description": "Retorna um usuário pelo ID",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotFoundError"
								}
							}
						}
					}
				},
				"description": "Atualiza um usuário existente",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserDto"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "Usuário removido com sucesso"
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotFoundError"
								}
							}
						}
					}
				},
				"description": "Remove um usuário (soft delete)",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponseDto"
								},
								"examples": {
									"Example 1": {
										"value": {
											"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
											"user": {
												"id": 1,
												"name": "John Doe",
												"email": "john@example.com",
												"roles": [
													"admin"
												]
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Dados de entrada inválidos",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"401": {
						"description": "Credenciais inválidas",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UnauthorizedError"
								}
							}
						}
					}
				},
				"description": "Autentica um usuário e retorna um token JWT",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginDto"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}